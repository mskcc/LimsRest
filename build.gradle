group 'org.mskcc.limsrest'
version '1.17.3'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}

apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.2"
}

if (target== 'dev'){
    copy {
        from "src/dev/resources"
        into "src/main/resources"
    }
    version += 'd'
} else if(target == 'test'){
    copy {
        from "src/test-site-res/resources"
        into "src/main/resources"
    }
} else {
    copy {
        from "src/production/resources"
        into "src/main/resources"
    }
}

war {
    archivesBaseName = 'LimsRest##'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "${nexusUrlReleases}" }
    maven { url "${nexusUrlSnapshots}" }
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    providedRuntime
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile 'org.mskcc.common:common-domain:2.13.1-SNAPSHOT'

    compile "io.springfox:springfox-swagger-ui:2.9.2"
    compile "io.springfox:springfox-swagger2:2.9.2"

    compile "org.springframework.boot:spring-boot-starter-security:2.1.6.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-tomcat:2.1.6.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-web:2.1.6.RELEASE"

    testCompile(group: 'org.springframework', name: 'spring-test', version: '5.1.6.RELEASE')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    compile ('javax.servlet:jstl:1.2')

    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.9'

    compile 'com.velox.internalproducts:veloxapi:10.6.1-b777'
    compile 'com.velox.sloan.cmo:sloancmo:2.21.1-LIMS10.6.1_b84'
    compile 'com.velox.internalproducts:sapiogeneric:15.0.0-LIMS10.6.1'
    compile 'com.velox.internalproducts:sapioutils:15.0.0-LIMS10.6.1'
    compile 'com.velox.internalproducts:sapio-commons:15.0.0-LIMS10.6.1'

    compile fileTree (dir: 'libs', include: '*.jar')

    testCompile ('io.rest-assured:rest-assured:3.0.1')
    testCompile ("junit:junit")
    testCompile ("org.mockito:mockito-core:1.10.19")
    compile('org.junit.jupiter:junit-jupiter:5.4.0')
    compile 'org.assertj:assertj-core:3.9.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}

bootRun {
    if (System.getProperty('DEBUG', 'false') == 'true')
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006'
    systemProperty 'server.port', '5008'
}

tasks.withType(Test) {
    if (System.getProperty('DEBUG', 'false') == 'true')
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5006'

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat "full"
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    description = "Integration Tests"
    outputs.upToDateWhen { false }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(
                    url: "${nexusUrlReleases}") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(
                    url: "${nexusUrlSnapshots}") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }

            pom.project {
                parent {
                    groupId 'io.spring.platform'
                    artifactId 'platform-bom'
                    version 'Cairo-RELEASE'
                }
            }
        }
    }
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacoco"
    }
}
