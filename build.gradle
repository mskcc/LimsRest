plugins {
    id 'java'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

group 'org.mskcc.limsrest'
version '23_3'

repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://jitpack.io' }
        maven { url "${nexusUrlReleases}"
            allowInsecureProtocol = true}
}

if (target == 'dev'){
    copy {
        from "src/dev/resources"
        into "src/main/resources"
    }
    version += 'd'
} else if(target == 'test'){
    copy {
        from "src/test-site-res/resources"
        into "src/main/resources"
    }
} else if(target == 'local'){
    copy {
        from "src/local/resources"
        into "src/main/resources"
    }
    version += 'l'
} else {
    copy {
        from "src/production/resources"
        into "src/main/resources"
    }
}

jar {
    manifest {
        attributes("Implementation-Title": "Lims Plugin",
                   "Implementation-Version": "23.3")
    }
    archiveBaseName = 'LimsRest_'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "${nexusUrlReleases}"
        allowInsecureProtocol = true}
    maven { url 'https://jitpack.io' }
}

configurations {
    providedRuntime
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
//    implementation 'com.velox.internalproducts:veloxapi:10.6.1-b777'
//    implementation 'com.velox.sloan.cmo:sloancmo:2.21.1-LIMS10.6.1_b777'
//    implementation 'com.velox.internalproducts:sapiogeneric:15.1.0-LIMS10.6.1'
//    implementation 'com.velox.internalproducts:sapioutils:15.1.0-LIMS10.6.1'
//    implementation 'com.velox.internalproducts:sapio-commons:15.1.0-LIMS10.6.1'

    implementation fileTree (dir: 'libs', include: '*.jar')

    // cmo metadb messaging library dependency added with jitpack
    implementation('com.github.mskcc:smile-messaging-java:1.3.1.RELEASE')
    implementation('com.github.mskcc:smile-commons:1.3.1.RELEASE')
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'org.mskcc.common:common-domain:2.14'

    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.23'
    implementation "io.springfox:springfox-swagger-ui:2.9.2"
    implementation "io.springfox:springfox-swagger2:2.9.2"
    implementation group: 'org.json', name: 'json', version: '20180130'
    implementation "org.springframework.boot:spring-boot-starter-security:2.6.7"
    implementation "org.springframework.boot:spring-boot-starter-tomcat:2.6.7"
    implementation "org.springframework.boot:spring-boot-starter-web:2.6.7"

    testImplementation(group: 'org.springframework', name: 'spring-test', version: '5.1.6.RELEASE')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    implementation ('javax.servlet:jstl:1.2')

    implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'

    testImplementation ('io.rest-assured:rest-assured:3.0.1')
    testImplementation ("junit:junit")
    testImplementation ("org.mockito:mockito-core:1.10.19")
    implementation('org.junit.jupiter:junit-jupiter:5.4.0')
    implementation 'org.assertj:assertj-core:3.9.0'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

tasks.withType(Test) {
    if (System.getProperty('DEBUG', 'false') == 'true')
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5006'

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat "full"
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    description = "Integration Tests"
    outputs.upToDateWhen { false }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "${nexusUrlReleases}"
        allowInsecureProtocol = true}
}